{"version":3,"sources":["api.ts","TodoList.tsx","App.tsx","index.tsx"],"names":["getDataFromServer","url","a","fetch","then","response","json","getTodosFromServer","getUsersFromServer","TodoList","state","todos","users","dataLoaded","sortByTitle","setState","sort","b","title","localeCompare","sortByName","userId","sortByCompletion","Number","completed","reverse","loadTodosFromServer","Promise","all","data","className","type","style","display","this","onClick","map","todo","key","id","filter","user","name","React","PureComponent","App","ReactDOM","render","document","getElementById"],"mappings":"uTAGMA,EAAiB,uCAAG,WAAOC,GAAP,SAAAC,EAAA,+EACxBC,MAAMF,GAAKG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WADb,2CAAH,sDAIVC,EAAkB,uCAAG,sBAAAL,EAAA,+EAChCF,EARoB,8EAOY,2CAAH,qDAIlBQ,EAAkB,uCAAG,sBAAAN,EAAA,+EAChCF,EAXoB,8EAUY,2CAAH,qDCAVS,E,4MAEnBC,MAAe,CACbC,MAAO,GACPC,MAAO,GACPC,YAAY,G,EAGdC,YAAc,WACZ,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,MAAM,YAAKD,EAAMC,MAAMK,MAAK,SAACd,EAAGe,GAAJ,OAAUf,EAAEgB,MAAMC,cAAcF,EAAEC,gB,EAIlEE,WAAa,WACX,EAAKL,UAAS,SAAAL,GAAK,MAAK,CACtBC,MAAM,YAAKD,EAAMC,MAAMK,MAAK,SAACd,EAAGe,GAAJ,OAAUf,EAAEmB,OAASJ,EAAEI,gB,EAIvDC,iBAAmB,WACjB,EAAKP,UAAS,SAAAL,GAAK,MAAK,CACtBC,MAAM,YAAKD,EAAMC,MACdK,MAAK,SAACd,EAAGe,GAAJ,OAAWM,OAAOrB,EAAEsB,WAAaD,OAAON,EAAEO,cAAaC,gB,EAInEC,oBAAsB,WACpBC,QAAQC,IAAI,CAACpB,IAAsBD,MAAuBH,MAAK,SAACyB,GAC9D,EAAKd,SAAS,CACZH,MAAOiB,EAAK,GACZlB,MAAOkB,EAAK,GACZhB,YAAY,Q,uDAKR,IAAD,OACP,OACE,oCACE,yBAAKiB,UAAU,mBACb,4BACEC,KAAK,SACLD,UAAU,sBACVE,MAAO,CAAEC,QAASC,KAAKxB,MAAMG,WAAa,OAAS,WACnDsB,QAASD,KAAKR,qBAJhB,0BAQA,4BACEK,KAAK,SACLC,MAAO,CAAEC,QAASC,KAAKxB,MAAMG,WAAa,UAAY,QACtDiB,UAAU,sBACVK,QAASD,KAAKpB,aAJhB,iBAQA,4BACEiB,KAAK,SACLC,MAAO,CAAEC,QAASC,KAAKxB,MAAMG,WAAa,UAAY,QACtDiB,UAAU,sBACVK,QAASD,KAAKd,YAJhB,gBAQA,4BACEW,KAAK,SACLC,MAAO,CAAEC,QAASC,KAAKxB,MAAMG,WAAa,UAAY,QACtDiB,UAAU,sBACVK,QAASD,KAAKZ,kBAJhB,uBASF,yBAAKQ,UAAU,cAEZI,KAAKxB,MAAMC,MAAMyB,KAAI,SAAAC,GAAI,OACxB,yBACEC,IAAKD,EAAKE,GACVT,UAAU,QAEV,0BAAMA,UAAU,cAAhB,YAEG,IAFH,UAGO,EAAKpB,MAAME,MAAM4B,QAAO,SAAAC,GAAI,OAAIA,EAAKF,KAAOF,EAAKhB,UAAQ,GAAIqB,OAEpE,0BAAMZ,UAAU,eACbO,EAAKnB,OAER,0BAAMY,UAAWO,EAAKb,UAAY,kBAAoB,uBAAtD,aAEG,IAFH,UAGMa,EAAKb,sB,GA5FamB,IAAMC,eCA7BC,EAPH,kBACV,oCACE,qDACA,kBAAC,EAAD,QCHJC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.4e02caf8.chunk.js","sourcesContent":["const TODOS_API_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api/todos.json';\nconst USERS_API_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api/users.json';\n\nconst getDataFromServer = async (url: string) => (\n  fetch(url).then(response => response.json())\n);\n\nexport const getTodosFromServer = async () => (\n  getDataFromServer(TODOS_API_URL)\n);\n\nexport const getUsersFromServer = async () => (\n  getDataFromServer(USERS_API_URL)\n);\n","import React from 'react';\n\nimport { getUsersFromServer, getTodosFromServer } from './api';\nimport { Todos, Users } from './interface';\n\ntype State = {\n  todos: Todos[];\n  users: Users[];\n  dataLoaded: boolean;\n};\n\nexport default class TodoList extends React.PureComponent<{},\n{ todos: Todos[]; users: Users[]; dataLoaded: boolean }> {\n  state: State = {\n    todos: [],\n    users: [],\n    dataLoaded: false,\n  };\n\n  sortByTitle = () => {\n    this.setState(state => ({\n      todos: [...state.todos.sort((a, b) => a.title.localeCompare(b.title))],\n    }));\n  };\n\n  sortByName = () => {\n    this.setState(state => ({\n      todos: [...state.todos.sort((a, b) => a.userId - b.userId)],\n    }));\n  };\n\n  sortByCompletion = () => {\n    this.setState(state => ({\n      todos: [...state.todos\n        .sort((a, b) => (Number(a.completed) - Number(b.completed))).reverse()],\n    }));\n  };\n\n  loadTodosFromServer = () => {\n    Promise.all([getUsersFromServer(), getTodosFromServer()]).then((data) => {\n      this.setState({\n        users: data[0],\n        todos: data[1],\n        dataLoaded: true,\n      });\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"button__wrapper\">\n          <button\n            type=\"button\"\n            className=\"button button__load\"\n            style={{ display: this.state.dataLoaded ? 'none' : 'initial' }}\n            onClick={this.loadTodosFromServer}\n          >\n            Load Todos from Server\n          </button>\n          <button\n            type=\"button\"\n            style={{ display: this.state.dataLoaded ? 'initial' : 'none' }}\n            className=\"button button__sort\"\n            onClick={this.sortByTitle}\n          >\n            Sort by title\n          </button>\n          <button\n            type=\"button\"\n            style={{ display: this.state.dataLoaded ? 'initial' : 'none' }}\n            className=\"button button__sort\"\n            onClick={this.sortByName}\n          >\n            Sort by name\n          </button>\n          <button\n            type=\"button\"\n            style={{ display: this.state.dataLoaded ? 'initial' : 'none' }}\n            className=\"button button__sort\"\n            onClick={this.sortByCompletion}\n          >\n            Sort by completion\n          </button>\n        </div>\n        <div className=\"todo__list\">\n\n          {this.state.todos.map(todo => (\n            <div\n              key={todo.id}\n              className=\"todo\"\n            >\n              <span className=\"todo__user\">\n                Executor:\n                {' '}\n                {`${(this.state.users.filter(user => user.id === todo.userId)[0]).name}`}\n              </span>\n              <span className=\"todo__title\">\n                {todo.title}\n              </span>\n              <span className={todo.completed ? 'todo__completed' : 'todo__not-completed'}>\n                Completed:\n                {' '}\n                {`${todo.completed}`}\n              </span>\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport TodoList from './TodoList';\n\nconst App = () => (\n  <>\n    <h1>Dynamic list of TODOs</h1>\n    <TodoList />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}